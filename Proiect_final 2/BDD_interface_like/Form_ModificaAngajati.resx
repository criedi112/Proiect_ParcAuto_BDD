<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>