<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        C8oAAAAASUVORK5CYII=
</value>
  </data>
</root>