<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UpSgUpSgUpSg/9k=
</value>
  </data>
</root>